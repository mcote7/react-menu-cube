{"version":3,"sources":["components/CUBE_MAIN.jsx","App.js","reportWebVitals.js","index.js"],"names":["CUBE_MAIN","cube","document","querySelector","radioGroup","currentClass","changeSide","showClass","value","classList","remove","add","addEventListener","class","type","name","checked","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wOA4DeA,G,iBAxDG,WAEhB,IAAIC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,gBACpCE,EAAe,GAEnB,SAASC,IACP,IACIC,EAAY,QADGH,EAAWD,cAAc,YACLK,MAClCH,GACHJ,EAAKQ,UAAUC,OAAQL,GAEzBJ,EAAKQ,UAAUE,IAAKJ,GACpBF,EAAeE,EAQjB,OALAD,IAEAF,EAAWQ,iBAAkB,SAAUN,GAG/B,qCACJ,qBAAKO,MAAM,QAAX,SACE,sBAAKA,MAAM,OAAX,UACE,qBAAKA,MAAM,+BAAX,mBACA,qBAAKA,MAAM,8BAAX,kBACA,qBAAKA,MAAM,+BAAX,mBACA,qBAAKA,MAAM,8BAAX,kBACA,qBAAKA,MAAM,6BAAX,iBACA,qBAAKA,MAAM,gCAAX,yBAIJ,oBAAGA,MAAM,cAAT,UACE,kCACE,uBAAOC,KAAK,QAAQC,KAAK,mBAAmBP,MAAM,QAAQQ,SAAO,IADnE,YAGA,kCACE,uBAAOF,KAAK,QAAQC,KAAK,mBAAmBP,MAAM,UADpD,YAGA,kCACE,uBAAOM,KAAK,QAAQC,KAAK,mBAAmBP,MAAM,SADpD,WAGA,kCACE,uBAAOM,KAAK,QAAQC,KAAK,mBAAmBP,MAAM,SADpD,WAGA,kCACE,uBAAOM,KAAK,QAAQC,KAAK,mBAAmBP,MAAM,QADpD,UAGA,kCACE,uBAAOM,KAAK,QAAQC,KAAK,mBAAmBP,MAAM,WADpD,qBCzCOS,EARH,WACV,OACE,qBAAKC,UAAU,sBAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5B,SAAS6B,eAAe,SAM1BZ,M","file":"static/js/main.9c847b58.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport '../CSS/cube.css';\r\n\r\nconst CUBE_MAIN = () => {\r\n\r\n  var cube = document.querySelector('.cube');\r\n  var radioGroup = document.querySelector('.radio-group');\r\n  var currentClass = '';\r\n\r\n  function changeSide() {\r\n    var checkedRadio = radioGroup.querySelector(':checked');\r\n    var showClass = 'show-' + checkedRadio.value;\r\n    if ( currentClass ) {\r\n      cube.classList.remove( currentClass );\r\n    }\r\n    cube.classList.add( showClass );\r\n    currentClass = showClass;\r\n  }\r\n  // set initial side\r\n  changeSide();\r\n\r\n  radioGroup.addEventListener( 'change', changeSide );\r\n\r\n\r\n  return (<>\r\n      <div class=\"scene\">\r\n        <div class=\"cube\">\r\n          <div class=\"cube__face cube__face--front\">front</div>\r\n          <div class=\"cube__face cube__face--back\">back</div>\r\n          <div class=\"cube__face cube__face--right\">right</div>\r\n          <div class=\"cube__face cube__face--left\">left</div>\r\n          <div class=\"cube__face cube__face--top\">top</div>\r\n          <div class=\"cube__face cube__face--bottom\">bottom</div>\r\n        </div>\r\n      </div>\r\n\r\n      <p class=\"radio-group\">\r\n        <label>\r\n          <input type=\"radio\" name=\"rotate-cube-side\" value=\"front\" checked /> front\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" name=\"rotate-cube-side\" value=\"right\" /> right\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" name=\"rotate-cube-side\" value=\"back\" /> back\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" name=\"rotate-cube-side\" value=\"left\" /> left\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" name=\"rotate-cube-side\" value=\"top\" /> top\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" name=\"rotate-cube-side\" value=\"bottom\" /> bottom\r\n        </label>\r\n      </p>\r\n  </>);\r\n};\r\n\r\nexport default CUBE_MAIN;","import './App.css';\n\nimport CUBE_MAIN from './components/CUBE_MAIN';\n\nconst App = () => {\n  return (\n    <div className=\"App container-fluid\">\n      <CUBE_MAIN/>\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}